-- Rayfield UI Library Loader
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Create main window with pcall
local success, Window = pcall(function()
    return Rayfield:CreateWindow({
        Name = "Anto Chat System",
        LoadingTitle = "Loading Anto Chat...",
        LoadingSubtitle = "Random Message System",
        Theme = "DarkBlue",
        ConfigurationSaving = {
            Enabled = true,
            FolderName = "AntoChatConfig",
            FileName = "Settings"
        },
        Discord = {
            Enabled = false,
            Invite = "noinvite",
            RememberJoins = true
        },
        KeySystem = false
    })
end)

if not success or not Window then
    warn("Failed to create Rayfield window")
    return
end

-- Create main tab with pcall
local success, MainTab = pcall(function()
    return Window:CreateTab("Main", "home")
end)

if not success or not MainTab then
    warn("Failed to create main tab")
    return
end

-- Global variables
_G.AntoChatEnabled = false
_G.MessageFrequency = 5 -- Default frequency in seconds

-- Random messages table
local randomMessages = {
    "Skill issue",
    "Wifi from MCDONALD?",
    "InsaneðŸ’€",
    "lolðŸ¤¡",
    "spammer skill",
    "like milk?Good girlðŸ¥µ",
    "kidðŸ˜‚",
    "Hello Loser!",
    "Wow,amazing!",
    "BeatðŸ˜Ž",
    "####",
    "So ezðŸ¥±",
    "Lag?Bro cheat!ðŸ˜¡",
    "Haha",
    "Noob"
}

-- UI elements for message list
local messageListLabel = MainTab:CreateLabel("Messages: " .. #randomMessages)
local messageListBox = MainTab:CreateParagraph({Title = "Message List:", Content = table.concat(randomMessages, "\n")})

-- Function to update message list display with pcall
local function updateMessageListDisplay()
    if messageListLabel then
        local success1, err1 = pcall(function()
            messageListLabel:Set("Current Messages: " .. #randomMessages)
        end)
        
        if not success1 then
            warn("Failed to update message list label: " .. tostring(err1))
        end
    end
    
    if messageListBox then
        local success2, err2 = pcall(function()
            messageListBox:Set({Title = "Message List:", Content = table.concat(randomMessages, "\n")})
        end)
        
        if not success2 then
            warn("Failed to update message list box: " .. tostring(err2))
        end
    end
end

-- Function to send random messages with pcall
local function sendRandomMessage()
    if not _G.AntoChatEnabled then return end
    
    local TextChatService = game:GetService("TextChatService")
    
    if not TextChatService then
        warn("Failed to get TextChatService")
        return
    end
    
    local textChannels = TextChatService:FindFirstChild("TextChannels")
    
    if not textChannels then
        warn("Failed to find TextChannels")
        return
    end
    
    local generalChannel = textChannels:FindFirstChild("RBXGeneral")
    
    if not generalChannel then
        warn("Failed to find RBXGeneral channel")
        return
    end
    
    local randomIndex = math.random(1, #randomMessages)
    local selectedMessage = randomMessages[randomIndex]
    
    local success, errorMsg = pcall(function()
        generalChannel:SendAsync(selectedMessage)
    end)
    
    if not success then
        warn("Failed to send message: " .. tostring(errorMsg))
    end
end

-- Create UI elements without pcall to ensure they all get created
local AntoToggle = MainTab:CreateToggle({
    Name = "Anto Chat",
    CurrentValue = false,
    Flag = "AntoChatToggle",
    Callback = function(Value)
        _G.AntoChatEnabled = Value
        
        if Value then
            -- Start sending random messages when toggle is enabled
            Rayfield:Notify({
                Title = "Anto Chat",
                Content = "Enabled - Sending random messages",
                Duration = 3,
            })
            
            -- Create loop for sending messages
            task.spawn(function()
                while _G.AntoChatEnabled do
                    sendRandomMessage()
                    task.wait(_G.MessageFrequency)
                end
            end)
        else
            -- Notify when disabled
            Rayfield:Notify({
                Title = "Anto Chat",
                Content = "Disabled - No sending messages",
                Duration = 3,
            })
        end
    end,
})

local FrequencySlider = MainTab:CreateSlider({
    Name = "Message Frequency",
    Range = {5, 60},
    Increment = 1,
    Suffix = "seconds",
    CurrentValue = 5,
    Flag = "MessageFrequency",
    Callback = function(Value)
        _G.MessageFrequency = Value
    end,
})

local MessageInput = MainTab:CreateInput({
    Name = "Add Message to list",
    PlaceholderText = "Enter your message",
    RemoveTextAfterFocusLost = false,
    Callback = function(Text)
        if Text and Text ~= "" then
            table.insert(randomMessages, Text)
            updateMessageListDisplay()
            Rayfield:Notify({
                Title = "Message Added",
                Content = "Added: " .. Text,
                Duration = 3,
            })
        end
    end,
})

local ClearButton = MainTab:CreateButton({
    Name = "Clear All Messages",
    Callback = function()
        randomMessages = {}
        updateMessageListDisplay()
        Rayfield:Notify({
            Title = "Messages Reset",
            Content = "All messages have been cleared",
            Duration = 3,
        })
    end,
})

-- Initial update of message list
updateMessageListDisplay()
